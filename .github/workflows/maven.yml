# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.3.0

      - name: execute remote ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_IDENTITYFILE }}
          port: ${{ secrets.REMOTE_PORT }}
          script: |
            whoami
            ls -al

    # steps:
    # - uses: actions/checkout@v4
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: '17'
    #     distribution: 'temurin'
    #     cache: maven
    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml

    # # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

# name: Java CI with Maven

# env:
#   AWS_REGION: ap-northeast-2
#   S3_BUCKET_NAME: le-cl-bucket
#   CODE_DEPLOY_APPLICATION_NAME: le-cl-app
#   CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: le-cl-group
  
# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#     - name: Configure AWS Credentials
#       # You may pin to the exact commit or the version.
#       # uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         # AWS Access Key ID
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         # AWS Secret Access Key
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         # AWS Region, e.g. us-east-2
#         aws-region: ${{ secrets.AWS_REGION }}
#     - name: upload to S3
#       run: |
#         aws deploy push \
#           --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#           --ignore-hidden-files \
#           --s3-location s3://$S3_BUCKET_NAME/BE/BE-$GITHUB_SHA.zip \
#           --source .
#     - name: Deploy to AWS EC2 from S3
#       run: |
#         aws deploy create-deployment \
#           --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#           --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=BE/BE-$GITHUB_SHA.zip,bundleType=zip
